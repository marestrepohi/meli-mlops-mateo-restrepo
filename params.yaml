# =====================================================================
# Housing Price Prediction - Configuration Parameters
# =====================================================================
# Este archivo centraliza todos los hiperparámetros y configuraciones
# del proyecto siguiendo las mejores prácticas de MLOps.
#
# Modificar estos valores permite experimentar sin cambiar código.
# =====================================================================

# ----- Data Ingestion & Preprocessing -----
data_ingestion:
  test_size: 0.2           # Proporción del dataset para testing (20%)
  random_state: 42         # Semilla para reproducibilidad
  shuffle: true            # Mezclar datos antes del split

preprocessing:
  scaling_method: "standard"  # standard, minmax, robust
  handle_missing: "drop"      # drop, mean, median, mode
  remove_duplicates: true
  outlier_detection: false    # Detección de outliers (experimental)
  outlier_method: "iqr"       # iqr, zscore
  outlier_threshold: 3        # Umbral para z-score

# ----- Model Building -----
model_building:
  # General
  cv_folds: 5                # K-Folds para cross-validation
  scoring_metric: "neg_mean_squared_error"  # Métrica principal
  
  # Linear Regression (Baseline)
  linear_regression:
    fit_intercept: true
    
  # Ridge Regression
  ridge:
    alpha: 1.0
    max_iter: 1000
    solver: "auto"
    
  # Random Forest Regressor
  random_forest:
    n_estimators: 100        # Número de árboles
    max_depth: 10            # Profundidad máxima
    min_samples_split: 2     # Mínimo de muestras para split
    min_samples_leaf: 1      # Mínimo de muestras en hoja
    max_features: "sqrt"     # Features a considerar en cada split
    n_jobs: -1               # Usar todos los cores
    random_state: 42
    
  # Gradient Boosting Regressor
  gradient_boosting:
    n_estimators: 100
    learning_rate: 0.1       # Tasa de aprendizaje
    max_depth: 3             # Profundidad de cada árbol
    min_samples_split: 2
    min_samples_leaf: 1
    subsample: 1.0           # Fracción de muestras para entrenar cada árbol
    random_state: 42

# ----- Model Evaluation -----
model_evaluation:
  metrics:
    - "rmse"                # Root Mean Squared Error (principal)
    - "mae"                 # Mean Absolute Error
    - "r2"                  # R² Score
    - "mse"                 # Mean Squared Error
  
  # Generar artefactos adicionales
  generate_plots: true
  save_predictions: true
  save_feature_importance: true
  
  # Límites para alertas
  min_r2_score: 0.7         # R² mínimo aceptable
  max_rmse: 10.0            # RMSE máximo aceptable

# ----- MLflow Configuration -----
mlflow:
  tracking_uri: "http://localhost:5000"
  experiment_name: "housing-price-prediction"
  
  # Registro de artefactos
  log_artifacts: true
  log_model: true
  log_preprocessor: true
  log_plots: true
  
  # Tags automáticos
  auto_log: false           # AutoLog de sklearn (puede ser verboso)
  
# ----- API Configuration -----
api:
  host: "0.0.0.0"
  port: 8000
  title: "Housing Price Prediction API"
  version: "1.0.0"
  debug: false
  
  # Rate limiting (requests por minuto)
  rate_limit: 100
  
  # Timeouts
  request_timeout: 30       # segundos
  
# ----- Monitoring Configuration -----
monitoring:
  enabled: true
  log_predictions: true
  log_latency: true
  log_errors: true
  
  # Drift Detection
  drift_detection_enabled: false
  drift_threshold: 0.1
  drift_check_interval: 100  # cada N predicciones
  
  # Performance Alerts
  latency_threshold_ms: 100
  error_rate_threshold: 0.05  # 5%
  
  # Retention
  logs_retention_days: 30
  metrics_retention_days: 90

# ----- Training Pipeline -----
pipeline:
  auto_retrain: false       # Reentrenamiento automático
  retrain_interval_days: 7
  min_samples_for_retrain: 1000
  
  # Validación antes de deploy
  validation_required: true
  min_test_score: 0.75      # R² mínimo en test set
  
  # Deployment
  auto_deploy: false
  deployment_strategy: "blue_green"  # blue_green, canary, rolling

# ----- Feature Engineering -----
feature_engineering:
  enabled: false            # Experimental
  
  # Features polinomiales
  polynomial_features: false
  poly_degree: 2
  
  # Interacciones
  interaction_features: false
  interactions:
    - ["RM", "DIS"]         # Rooms x Distance
    - ["LSTAT", "PTRATIO"]  # Lower status x Pupil-teacher ratio
    
  # Transformaciones
  log_transform: []         # Ej: ["LSTAT", "DIS"]
  sqrt_transform: []
  
# ----- Hyperparameter Tuning -----
hyperparameter_tuning:
  enabled: false            # Experimental: usar Optuna
  method: "random_search"   # random_search, grid_search, bayesian
  n_trials: 50              # Para Optuna
  cv_folds: 3
  
  # Espacio de búsqueda para Random Forest
  rf_search_space:
    n_estimators: [50, 100, 200, 300]
    max_depth: [5, 10, 15, 20, null]
    min_samples_split: [2, 5, 10]
    min_samples_leaf: [1, 2, 4]
    max_features: ["sqrt", "log2", null]

# ----- Reproducibility -----
reproducibility:
  seed: 42
  deterministic: true       # Forzar determinismo (puede ser más lento)
  
# ----- Logging Configuration -----
logging:
  level: "INFO"             # DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
  # Archivos de log
  file_logging: true
  log_dir: "logs"
  max_file_size_mb: 10
  backup_count: 5

# ----- Performance -----
performance:
  batch_size: 32            # Para predicciones batch
  cache_model: true         # Cachear modelo en memoria
  cache_ttl_seconds: 3600   # Time-to-live del caché
  
  # Paralelización
  n_jobs: -1                # -1 = todos los cores disponibles
  
# ----- Data Validation -----
data_validation:
  enabled: true
  
  # Límites esperados para features
  feature_ranges:
    CRIM: [0.0, 100.0]
    ZN: [0.0, 100.0]
    INDUS: [0.0, 30.0]
    CHAS: [0.0, 1.0]
    NOX: [0.0, 1.0]
    RM: [0.0, 10.0]
    AGE: [0.0, 100.0]
    DIS: [0.0, 15.0]
    RAD: [0.0, 25.0]
    TAX: [0.0, 1000.0]
    PTRATIO: [0.0, 30.0]
    B: [0.0, 500.0]
    LSTAT: [0.0, 50.0]
    
  # Alerta si valores fuera de rango
  alert_on_out_of_range: true
  
# ----- Experiment Tracking -----
experiment_tracking:
  track_system_metrics: false  # CPU, RAM, GPU (experimental)
  track_carbon_footprint: false  # Emisiones de CO2 (experimental)
  
# ----- Deployment -----
deployment:
  environment: "development"  # development, staging, production
  
  # Health checks
  health_check_interval: 60   # segundos
  health_check_timeout: 5     # segundos
  
  # Recursos
  max_workers: 4              # Para Uvicorn
  worker_timeout: 30          # segundos
  
  # Docker
  docker_image: "housing-price-prediction"
  docker_tag: "latest"

# ----- Backup & Recovery -----
backup:
  enabled: false
  backup_dir: "backups"
  backup_interval_hours: 24
  keep_backups: 7             # Mantener últimos N backups
  
  # Qué respaldar
  backup_models: true
  backup_data: false          # Dataset grande
  backup_logs: true

# =====================================================================
# NOTAS:
# - Modificar valores sin cambiar código
# - Valores por defecto optimizados para Boston Housing
# - Para producción: ajustar monitoring, deployment, performance
# - Para experimentación: habilitar hyperparameter_tuning
# =====================================================================
